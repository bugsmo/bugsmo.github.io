import{_ as o,r,o as l,c,b as n,d as e,e as a,a as t}from"./app-8ca7f52c.js";const p={},i=n("h1",{id:"本地存储支持",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#本地存储支持","aria-hidden":"true"},"#"),e(" 本地存储支持")],-1),d={href:"https://openebs.io/",target:"_blank",rel:"noopener noreferrer"},u=n("h2",{id:"emptydir",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#emptydir","aria-hidden":"true"},"#"),e(" emptyDir")],-1),h={href:"https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/percona/percona-xtradb-cluster-operator/blob/main/deploy/cr.yaml",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"emptyDir",-1),k=n("h2",{id:"hostpath",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hostpath","aria-hidden":"true"},"#"),e(" hostPath")],-1),v=n("p",null,"hostPath 卷将一些现有文件或目录从节点的文件系统挂载到 Pod 中。",-1),b={href:"https://github.com/percona/percona-xtradb-cluster-operator/blob/main/deploy/cr.yaml",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"volumeSpec.hostPath",-1),g=n("code",null,"path",-1),f=n("code",null,"type",-1),x=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">volumeSpec</span><span class="token punctuation">:</span>
  <span class="token key atrule">hostPath</span><span class="token punctuation">:</span>
    <span class="token key atrule">path</span><span class="token punctuation">:</span> /data
    <span class="token key atrule">type</span><span class="token punctuation">:</span> Directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),P={href:"https://docs.percona.com/percona-operator-for-mysql/pxc/faq.html#faq-hostpath",target:"_blank",rel:"noopener noreferrer"},S={href:"https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html#pxc-containersecuritycontext",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html#pxc-podsecuritycontext",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,[n("code",null,"hostPath"),e(" 当您能够在首次运行期间执行手动操作并且强烈需要提高磁盘性能时，这很有用。此外，请考虑使用 "),n("code",null,"tolerations"),e(" 来避免在重新启动或硬件故障时将群集迁移到不同的硬件。")],-1),O={href:"https://kubernetes.io/docs/concepts/storage/volumes/#hostpath",target:"_blank",rel:"noopener noreferrer"},D=n("h2",{id:"openebs-本地持久卷-hostpath",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#openebs-本地持久卷-hostpath","aria-hidden":"true"},"#"),e(" OpenEBS 本地持久卷 Hostpath")],-1),M={href:"https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://openebs.io/docs/user-guides/localpv-hostpath",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,"使用它涉及以下步骤。",-1),N={href:"https://openebs.io/docs/user-guides/installation",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"local-hostpath.yaml",-1),q={href:"https://kubernetes.io/docs/concepts/storage/storage-classes/",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> storage.k8s.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> StorageClass
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> localpv
  <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
    <span class="token key atrule">openebs.io/cas-type</span><span class="token punctuation">:</span> local
    <span class="token key atrule">cas.openebs.io/config</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
      - name: StorageType
        value: hostpath
      - name: BasePath
        value: /var/local-hostpath</span>
<span class="token key atrule">provisioner</span><span class="token punctuation">:</span> openebs.io/local
<span class="token key atrule">reclaimPolicy</span><span class="token punctuation">:</span> Delete
<span class="token key atrule">volumeBindingMode</span><span class="token punctuation">:</span> WaitForFirstConsumer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，要编辑的两件事是 <code>metadata.name</code> 键（您将将其用作存储类名称）和 <code>cas.openebs.io/config</code>下的 value 选项（它应该指向节点本地文件系统上已经存在的目录）。</p><p>准备就绪后，使用 <code>kubectl apply -f local-hostpath.yaml</code> 命令应用文件。</p><ol start="3"><li>现在，您可以在以下位置 <code>deploy/cr.yaml</code> 使用此 StorageClass 部署 Operator 和 Percona XtraDB 集群：</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">...</span>
<span class="token key atrule">volumeSpec</span><span class="token punctuation">:</span>
  <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>
    <span class="token key atrule">storageClassName</span><span class="token punctuation">:</span> localpv
    <span class="token key atrule">accessModes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;ReadWriteOnce&quot;</span> <span class="token punctuation">]</span>
      <span class="token key atrule">resources</span><span class="token punctuation">:</span>
        <span class="token key atrule">requests</span><span class="token punctuation">:</span>
          <span class="token key atrule">storage</span><span class="token punctuation">:</span> 200Gi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),K={class:"hint-container tip"},L=n("p",{class:"hint-container-title"},"注意",-1),H={href:"https://www.percona.com/blog/openebs-for-the-management-of-kubernetes-storage-volumes/?_gl=1*6efkb5*_gcl_au*OTg5NTM4MTc5LjE2OTMyMDY2NDQ.",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.percona.com/blog/measuring-openebs-local-volume-performance-overhead-in-kubernetes/?_gl=1*16w8rxv*_gcl_au*OTg5NTM4MTc5LjE2OTMyMDY2NDQ.",target:"_blank",rel:"noopener noreferrer"};function j(F,I){const s=r("ExternalLinkIcon");return l(),c("div",null,[i,n("p",null,[e("在 Kubernetes 中可用的广泛卷类型中，有一些允许 Pod 容器访问节点上部分本地文件系统。Kubernetes 本身提供的两个此类选项是 emptyDir 和 hostPath 卷。更全面的设置需要额外的组件，例如 "),n("a",d,[e("OpenEBS 容器附加存储解决方案"),a(s)])]),u,n("p",null,[e("此选项的名称是不言自明的。当具有"),n("a",h,[e("emptyDir volume"),a(s)]),e("的 Pod 被分配给一个节点时，会在这个节点上创建一个具有指定名称的目录，并一直存在，直到这个 Pod 从节点中删除。删除 Pod 后，该目录及其所有内容也会被删除。Pod 中挂载了此卷的所有容器都将获得对相应目录的读写访问权限。")]),n("p",null,[n("a",m,[e("deploy/cr.yaml"),a(s)]),e(" 文件中 "),_,e(" 的选项可用于通过设置目录名称来打开 emptyDir 卷。")]),k,v,n("p",null,[n("a",b,[e("deploy/cr.yaml"),a(s)]),e(" 文件中 "),y,e(" 的小节可以包含 "),g,e(" 和 "),f,e(" 键，用于设置节点的文件系统对象路径并指定它是文件、目录还是其他内容（例如 socket）：")]),x,n("p",null,[e("请注意，hostPath 目录不是自动创建的！它应该在节点的文件系统上"),n("a",P,[e("手动创建"),a(s)]),e("。此外，它应该具有属性（访问权限、所有权、SELinux 安全上下文），这将允许 Pod 根据 "),n("a",S,[e("pxc.containerSecurityContext"),a(s)]),e(" 和 "),n("a",B,[e("pxc.podSecurityContext"),a(s)]),e(" 访问相应的文件系统对象。")]),E,n("p",null,[e("更多细节可以在官方的 "),n("a",O,[e("hostPath Kubernetes"),a(s)]),e(" 文档中找到。")]),D,n("p",null,[e("emptyDir 和 hostPath 卷都不支持"),n("a",M,[e("动态卷"),a(s)]),e("置备。OpenEBS 提供了允许将动态卷配置与本地持久卷结合使用的选项。具体而言，OpenEBS "),n("a",C,[e("Local PV Hostpath"),a(s)]),e(" 允许使用节点上的目录 （Hostpath） 创建 Kubernetes 本地持久卷。应用程序可以通过 Storage Class 和 PersistentVolumeClaim 进一步访问此类卷。")]),T,n("ol",null,[n("li",null,[e("参考"),n("a",N,[e("官方安装指南"),a(s)]),e("在您的系统上安装 OpenEBS。")]),n("li",null,[e("使用 OpenEBS 和 YAML 文件（例如 "),V,e(" ）定义新的 Kubernetes "),n("a",q,[e("存储类"),a(s)]),e("，如下所示：")])]),w,n("div",K,[L,n("p",null,[e("OpenEBS 还提供了其他存储选项，这些选项可能对您的集群设置有所帮助。有关更多示例，请查看 "),n("a",H,[e("OpenEBS for the Management of Kubernetes Storage Volumes"),a(s)]),e(" 博客文章。此外，请考虑查看"),n("a",Y,[e("在 Kubernetes 中测量 OpenEBS 本地卷性能开销"),a(s)]),e("一文。")])])])}const W=o(p,[["render",j],["__file","本地存储支持.html.vue"]]);export{W as default};
