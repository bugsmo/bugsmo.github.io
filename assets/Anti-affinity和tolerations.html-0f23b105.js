import{_ as o,r as i,o as l,c,b as n,d as e,e as s,a as t}from"./app-8ca7f52c.js";const p={},r=n("h1",{id:"anti-affinity-和-tolerations",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#anti-affinity-和-tolerations","aria-hidden":"true"},"#"),e(" Anti-affinity 和 tolerations")],-1),u=n("p",null,"Operator 可以很好地自动将新 Pod 分配给节点，这些节点足以实现整个集群的均衡分布。在某些情况下，确保 Pod 将登陆特定节点是值得的：例如，为了获得配备 SSD 的机器的速度优势，或者为了降低选择同一可用区中的节点的成本。",-1),d={href:"https://github.com/percona/percona-xtradb-cluster-operator/blob/main/deploy/cr.yaml",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"pxc",-1),y=n("code",null,"haproxy",-1),v=n("code",null,"proxysql",-1),b=t(`<h2 id="node-selector" tabindex="-1"><a class="header-anchor" href="#node-selector" aria-hidden="true">#</a> Node selector</h2><p><code>nodeSelector</code> 包含一个或多个键值对。如果节点没有用 Pod 的每个 <code>nodeSelector</code> 键值对进行标记，则 Pod 将无法登陆该节点。</p><p>以下示例将 Pod 绑定到任何具有不言自明 <code>disktype: ssd</code> 标签的节点：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span>
  <span class="token key atrule">disktype</span><span class="token punctuation">:</span> ssd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="affinity-and-anti-affinity" tabindex="-1"><a class="header-anchor" href="#affinity-and-anti-affinity" aria-hidden="true">#</a> Affinity and anti-affinity</h2><p>Affinity 使 Pod 有资格（或不符合条件 - 所谓的“anti-affinity”）被调度在已经具有具有特定标签的 Pod 的节点上。特别是，这种方法可以降低成本，确保多个具有密集数据交换的 Pod 将占据相同的可用区甚至相同的节点 - 或者相反，使它们落在不同的节点甚至不同的可用区，以实现高可用性和平衡的目的。</p><p>Percona Operator for MySQL 提供了两种方法来执行此操作：</p><ul><li>为 Pod 设置反亲和性的简单方法，内置于 Operator 中，</li><li>基于使用标准 Kubernetes 约束的更高级方法。</li></ul><h3 id="简单的方法-使用-percona-operator-for-mysql-的-topologykey" tabindex="-1"><a class="header-anchor" href="#简单的方法-使用-percona-operator-for-mysql-的-topologykey" aria-hidden="true">#</a> 简单的方法 - 使用 Percona Operator for MySQL 的 topologyKey</h3><p>Percona Operator for MySQL 提供了一个 <code>topologyKey</code> 选项，该选项可能具有以下值之一：</p><ul><li><code>kubernetes.io/hostname</code> - Pod 将避免驻留在同一个主机中，</li><li><code>failure-domain.beta.kubernetes.io/zone</code> - Pod 将避免驻留在同一个区域内，</li><li><code>failure-domain.beta.kubernetes.io/region</code> - Pod 将避免驻留在同一地区内，</li><li><code>none</code> - 不应用任何约束。</li></ul><p>以下示例强制 Percona XtraDB Cluster Pod 避免占用同一节点：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">affinity</span><span class="token punctuation">:</span>
  <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> <span class="token string">&quot;kubernetes.io/hostname&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高级方法-使用标准的-kubernetes-约束" tabindex="-1"><a class="header-anchor" href="#高级方法-使用标准的-kubernetes-约束" aria-hidden="true">#</a> 高级方法 - 使用标准的 Kubernetes 约束</h3>`,14),m=n("code",null,"advanced",-1),h={href:"https://github.com/percona/percona-xtradb-cluster-operator/blob/main/deploy/cr.yaml",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"topologyKey",-1),g=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">affinity</span><span class="token punctuation">:</span>
  <span class="token key atrule">advanced</span><span class="token punctuation">:</span>
    <span class="token key atrule">podAffinity</span><span class="token punctuation">:</span>
      <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>
            <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>
              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> security
                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In
                <span class="token key atrule">values</span><span class="token punctuation">:</span>
                  <span class="token punctuation">-</span> S1
          <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> failure<span class="token punctuation">-</span>domain.beta.kubernetes.io/zone
    <span class="token key atrule">podAntiAffinity</span><span class="token punctuation">:</span>
      <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">100</span>
          <span class="token key atrule">podAffinityTerm</span><span class="token punctuation">:</span>
            <span class="token key atrule">labelSelector</span><span class="token punctuation">:</span>
              <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>
                <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> security
                  <span class="token key atrule">operator</span><span class="token punctuation">:</span> In
                  <span class="token key atrule">values</span><span class="token punctuation">:</span>
                    <span class="token punctuation">-</span> S2
            <span class="token key atrule">topologyKey</span><span class="token punctuation">:</span> kubernetes.io/hostname
    <span class="token key atrule">nodeAffinity</span><span class="token punctuation">:</span>
      <span class="token key atrule">requiredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>
        <span class="token key atrule">nodeSelectorTerms</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>
              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> kubernetes.io/e2e<span class="token punctuation">-</span>az<span class="token punctuation">-</span>name
                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In
                <span class="token key atrule">values</span><span class="token punctuation">:</span>
                  <span class="token punctuation">-</span> e2e<span class="token punctuation">-</span>az1
                  <span class="token punctuation">-</span> e2e<span class="token punctuation">-</span>az2
      <span class="token key atrule">preferredDuringSchedulingIgnoredDuringExecution</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">weight</span><span class="token punctuation">:</span> <span class="token number">1</span>
          <span class="token key atrule">preference</span><span class="token punctuation">:</span>
            <span class="token key atrule">matchExpressions</span><span class="token punctuation">:</span>
              <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> another<span class="token punctuation">-</span>node<span class="token punctuation">-</span>label<span class="token punctuation">-</span>key
                <span class="token key atrule">operator</span><span class="token punctuation">:</span> In
                <span class="token key atrule">values</span><span class="token punctuation">:</span>
                  <span class="token punctuation">-</span> another<span class="token punctuation">-</span>node<span class="token punctuation">-</span>label<span class="token punctuation">-</span>value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_={href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity-beta-feature",target:"_blank",rel:"noopener noreferrer"},x=t(`<h2 id="tolerations" tabindex="-1"><a class="header-anchor" href="#tolerations" aria-hidden="true">#</a> Tolerations</h2><p>容错性允许拥有它们的 Pod 能够登陆具有匹配污点的节点。容差表示为 with <code>key</code> 和 <code>operator</code> ，即 <code>exists</code> 或 <code>equal</code> （后一种变体也要求 <code>value</code> 键等于）。此外，容忍应该有一个特定的 <code>effect</code> ，它可以是不言自明 NoSchedule 的、不那么严格的 PreferNoSchedule ，或者 NoExecute 。最后一个变体意味着，如果节点存在污点 NoExecute，那么任何不容忍此污点的 Pod 都将立即或 tolerationSeconds 在间隔后从节点中删除，如以下示例所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">tolerations</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&quot;node.alpha.kubernetes.io/unreachable&quot;</span>
    <span class="token key atrule">operator</span><span class="token punctuation">:</span> <span class="token string">&quot;Exists&quot;</span>
    <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token string">&quot;NoExecute&quot;</span>
    <span class="token key atrule">tolerationSeconds</span><span class="token punctuation">:</span> <span class="token number">6000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),P={href:"https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/",target:"_blank",rel:"noopener noreferrer"},S=n("h2",{id:"priority-classes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#priority-classes","aria-hidden":"true"},"#"),e(" Priority Classes")],-1),K={href:"https://github.com/percona/percona-xtradb-cluster-operator/blob/main/deploy/cr.yaml",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"PriorityClassName",-1),q=t(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">priorityClassName</span><span class="token punctuation">:</span> high<span class="token punctuation">-</span>priority
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),N={href:"https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/",target:"_blank",rel:"noopener noreferrer"},A=n("h2",{id:"pod-disruption-budgets",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pod-disruption-budgets","aria-hidden":"true"},"#"),e(" Pod Disruption Budgets")],-1),D=n("p",null,"创建 Pod 中断预算是 Kubernetes 的风格，用于限制应用程序的 Pod 数量，这些 Pod 的数量可能会因集群管理员在更新部署或节点期间的操作等自愿中断而同时关闭。通过这种方式，分发预算允许大型应用程序在维护和其他管理活动时保持其高可用性。",-1),I={href:"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",target:"_blank",rel:"noopener noreferrer"};function C(T,z){const a=i("ExternalLinkIcon");return l(),c("div",null,[r,u,n("p",null,[n("a",d,[e("deploy/cr.yaml"),s(a)]),e(" 文件的相应部分（例如 "),k,e(" 、 "),y,e(" 和 "),v,e(" ）包含可用于执行此操作的键，具体取决于最适合特定情况的键。")]),b,n("p",null,[e("使用以前的方法，无需特别了解将 Pod 分配给特定节点的 Kubernetes 方式。尽管如此，在某些情况下，可能需要更复杂的调整。在这种情况下 "),m,e(" ，放置在 "),n("a",h,[e("deploy/cr.yaml"),s(a)]),e(" 文件中的选项将 "),f,e(" 关闭并允许使用任何复杂性的标准 Kubernetes 亲和性约束：")]),g,n("p",null,[e("请参阅 "),n("a",_,[e("Kubernetes 文档"),s(a)]),e("中的高级亲和性选项说明。")]),x,n("p",null,[n("a",P,[e("Kubernetes Taints 和 Toleratins"),s(a)]),e(" 包含有关此主题的更多示例。")]),S,n("p",null,[e("Pod 可能属于某些优先级类。这允许调度器区分更多和不太重要的 Pod，以解决在不驱逐较低优先级的 Pod 的情况下无法调度某些优先级较高的 Pod 的情况。这可以通过在 Kubernetes 集群中添加一个或多个 PriorityClasses，并在 "),n("a",K,[e("deploy/cr.yaml"),s(a)]),e(" 文件中指定： "),E]),q,n("p",null,[e("请参阅 "),n("a",N,[e("Kubernetes Pod 优先级和抢占文档"),s(a)]),e("，了解如何在集群中定义和使用优先级类。")]),A,D,n("p",null,[e("我们建议手动应用 Pod 中断预算，以避免 Kubernetes 停止所有数据库 Pod 的情况。有关详细信息，请参阅"),n("a",I,[e("官方 Kubernetes 文档"),s(a)]),e("。")])])}const L=o(p,[["render",C],["__file","Anti-affinity和tolerations.html.vue"]]);export{L as default};
