import{_ as t,r as o,o as l,c as p,b as n,d as a,e,a as r}from"./app-8ca7f52c.js";const i={},c=r(`<h1 id="graphql" tabindex="-1"><a class="header-anchor" href="#graphql" aria-hidden="true">#</a> graphql</h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p><a href="">GraphQL</a> 是一种用于 API 的查询语言，由 Facebook 在 2012 年开源。它提供了一种客户端可以准确地获取所需数据的方式，而无需过多担心其返回的数据结构。GraphQL 旨在成为 API 的替代品，而不是 RESTful API。</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h2><ul><li>通过 GraphQL，客户端可以准确地获取所需数据，而无需过多担心其返回的数据结构。</li></ul><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ul><li>由于 GraphQL 是一种新的技术，因此在生产环境中使用它可能会有一些风险。</li><li>GraphQL 仅适用于 HTTP 协议，因此无法与其他协议一起使用。</li></ul><h2 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h2><ul><li>适用于需要快速开发 API 的场景。</li></ul><h2 id="go-项目使用-graphql" tabindex="-1"><a class="header-anchor" href="#go-项目使用-graphql" aria-hidden="true">#</a> go 项目使用 graphQL</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;log&quot;</span>
    <span class="token string">&quot;net/http&quot;</span>

    <span class="token string">&quot;github.com/graph-gophers/graphql-go&quot;</span>
    <span class="token string">&quot;github.com/graph-gophers/graphql-go/relay&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Resolver <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>Resolver<span class="token punctuation">)</span> <span class="token function">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello world!&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    schema <span class="token operator">:=</span> graphql<span class="token punctuation">.</span><span class="token function">MustParseSchema</span><span class="token punctuation">(</span>Schema<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Resolver<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    http<span class="token punctuation">.</span><span class="token function">Handle</span><span class="token punctuation">(</span><span class="token string">&quot;/query&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>relay<span class="token punctuation">.</span>Handler<span class="token punctuation">{</span>Schema<span class="token punctuation">:</span> schema<span class="token punctuation">}</span><span class="token punctuation">)</span>
    log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> Schema <span class="token operator">=</span> <span class="token string">\`
    type Query {
        hello: String!
    }
\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go-相关-graphql" tabindex="-1"><a class="header-anchor" href="#go-相关-graphql" aria-hidden="true">#</a> go 相关 graphQL</h2>`,12),u={href:"https://github.com/graphql-go/graphql",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/graph-gophers/graphql-go",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/99designs/gqlgen",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/aide-cloud/graphql-http",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),a(" 参考")],-1),v={href:"https://graphql.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.codingdict.com/article/23269",target:"_blank",rel:"noopener noreferrer"};function b(q,f){const s=o("ExternalLinkIcon");return l(),p("div",null,[c,n("ul",null,[n("li",null,[n("a",u,[a("graphql-go/graphql"),e(s)])]),n("li",null,[n("a",d,[a("graph-gophers/graphql-go"),e(s)])]),n("li",null,[n("a",h,[a("99designs/gqlgen"),e(s)])]),n("li",null,[n("a",g,[a("aide-cloud/graphql-http"),e(s)]),a(" 基于 graph-gophers 的最佳实践")])]),k,n("ul",null,[n("li",null,[n("a",v,[a("GraphQL"),e(s)])]),n("li",null,[n("a",m,[a("GraphQL 教程"),e(s)])])])])}const x=t(i,[["render",b],["__file","graphql.html.vue"]]);export{x as default};
